// Generated by gencpp from file aeplanner_evaluation/Coverage.msg
// DO NOT EDIT!


#ifndef AEPLANNER_EVALUATION_MESSAGE_COVERAGE_H
#define AEPLANNER_EVALUATION_MESSAGE_COVERAGE_H

#include <ros/service_traits.h>


#include <aeplanner_evaluation/CoverageRequest.h>
#include <aeplanner_evaluation/CoverageResponse.h>


namespace aeplanner_evaluation
{

struct Coverage
{

typedef CoverageRequest Request;
typedef CoverageResponse Response;
Request request;
Response response;

typedef Request RequestType;
typedef Response ResponseType;

}; // struct Coverage
} // namespace aeplanner_evaluation


namespace ros
{
namespace service_traits
{


template<>
struct MD5Sum< ::aeplanner_evaluation::Coverage > {
  static const char* value()
  {
    return "5436f3000508ef50908df092cf89c062";
  }

  static const char* value(const ::aeplanner_evaluation::Coverage&) { return value(); }
};

template<>
struct DataType< ::aeplanner_evaluation::Coverage > {
  static const char* value()
  {
    return "aeplanner_evaluation/Coverage";
  }

  static const char* value(const ::aeplanner_evaluation::Coverage&) { return value(); }
};


// service_traits::MD5Sum< ::aeplanner_evaluation::CoverageRequest> should match 
// service_traits::MD5Sum< ::aeplanner_evaluation::Coverage > 
template<>
struct MD5Sum< ::aeplanner_evaluation::CoverageRequest>
{
  static const char* value()
  {
    return MD5Sum< ::aeplanner_evaluation::Coverage >::value();
  }
  static const char* value(const ::aeplanner_evaluation::CoverageRequest&)
  {
    return value();
  }
};

// service_traits::DataType< ::aeplanner_evaluation::CoverageRequest> should match 
// service_traits::DataType< ::aeplanner_evaluation::Coverage > 
template<>
struct DataType< ::aeplanner_evaluation::CoverageRequest>
{
  static const char* value()
  {
    return DataType< ::aeplanner_evaluation::Coverage >::value();
  }
  static const char* value(const ::aeplanner_evaluation::CoverageRequest&)
  {
    return value();
  }
};

// service_traits::MD5Sum< ::aeplanner_evaluation::CoverageResponse> should match 
// service_traits::MD5Sum< ::aeplanner_evaluation::Coverage > 
template<>
struct MD5Sum< ::aeplanner_evaluation::CoverageResponse>
{
  static const char* value()
  {
    return MD5Sum< ::aeplanner_evaluation::Coverage >::value();
  }
  static const char* value(const ::aeplanner_evaluation::CoverageResponse&)
  {
    return value();
  }
};

// service_traits::DataType< ::aeplanner_evaluation::CoverageResponse> should match 
// service_traits::DataType< ::aeplanner_evaluation::Coverage > 
template<>
struct DataType< ::aeplanner_evaluation::CoverageResponse>
{
  static const char* value()
  {
    return DataType< ::aeplanner_evaluation::Coverage >::value();
  }
  static const char* value(const ::aeplanner_evaluation::CoverageResponse&)
  {
    return value();
  }
};

} // namespace service_traits
} // namespace ros

#endif // AEPLANNER_EVALUATION_MESSAGE_COVERAGE_H
